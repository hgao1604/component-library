{"version":3,"file":"Button-8de8f5a8.js","sources":["../../src/ui/Button/Button.tsx"],"sourcesContent":["import { twMerge } from \"tailwind-merge\";\n\nexport type ButtonSize = \"sm\" | \"lg\";\nexport type ButtonType = \"primary\" | \"default\" | \"danger\" | \"link\";\n\ninterface BaseButtonProps {\n  className?: string;\n  /** Disable the button */\n  disabled?: boolean;\n  /** Set the size of the button */\n  size?: ButtonSize;\n  /** Set the type of the button */\n  btnType?: ButtonType;\n  children: React.ReactNode;\n  href?: string;\n}\n\n// The following code is to make the Button component support HTML button and anchor elements, providing more flexibility.\ntype NativeButtonProps = BaseButtonProps &\n  React.ButtonHTMLAttributes<HTMLElement>;\ntype AnchorButtonProps = BaseButtonProps &\n  React.AnchorHTMLAttributes<HTMLElement>;\n\n// Some attributes are required on button but not on a, so we need Partial, vice versa.\nexport type ButtonProps = Partial<NativeButtonProps & AnchorButtonProps>;\n\n/**\n * The most common component of any UI library is the button. This\n * is a simple button component suporting HTML button and anchor\n * elements.\n * ### Usage\n * ```js\n * import {Button} from \"highcold-ui\";\n * ```\n */\nexport const Button: React.FC<ButtonProps> = (props) => {\n  const { className, disabled, size, btnType, children, href, ...restProps } =\n    props;\n  if (btnType === \"link\" && href) {\n    return (\n      <a\n        className={twMerge(\n          className,\n          \"underline-slate-700 relative inline-block cursor-pointer font-mono uppercase text-slate-700 underline underline-offset-8 disabled:cursor-not-allowed disabled:opacity-70\",\n          size === \"sm\" ? \"px-4 py-2 text-xs\" : \"\",\n          size === \"lg\" ? \"px-12 py-4 text-xl\" : \"\"\n        )}\n        href={href}\n        aria-disabled={disabled}\n        {...restProps}\n      >\n        {children}\n      </a>\n    );\n  }\n  return (\n    <>\n      <button\n        className={twMerge(\n          className,\n          \"relative inline-block rounded-lg bg-slate-300\tpx-8 py-2 font-mono font-semibold uppercase text-slate-700 shadow-md  transition-all duration-300 hover:-translate-y-[3px] hover:bg-slate-200 hover:shadow-lg focus:outline-none active:-translate-y-[1px] active:bg-slate-300 disabled:translate-y-0 disabled:cursor-not-allowed disabled:bg-primary disabled:opacity-70 disabled:shadow-none disabled:hover:shadow-none disabled:active:translate-y-0\",\n          btnType === \"primary\"\n            ? \"bg-primary text-slate-100 hover:bg-green-400 active:bg-primary\"\n            : \"\",\n          btnType === \"danger\"\n            ? \"bg-danger text-slate-100 hover:bg-red-500 active:bg-danger\"\n            : \"\",\n          size === \"sm\" ? \"rounded-md px-4 py-2 text-xs\" : \"\",\n          size === \"lg\" ? \"rounded-xl px-12 py-4 text-xl\" : \"\"\n        )}\n        disabled={disabled}\n        {...restProps}\n      >\n        {children}\n      </button>\n    </>\n  );\n};\n\nButton.defaultProps = {\n  disabled: false,\n  btnType: \"default\",\n};\n\nexport default Button;\n"],"names":["Button","props","className","disabled","size","btnType","children","href","restProps","jsx","twMerge","Fragment"],"mappings":"yFAmCO,MAAAA,EAAAC,GAAA,CACL,KAAA,CAAA,UAAAC,EAAA,SAAAC,EAAA,KAAAC,EAAA,QAAAC,EAAA,SAAAC,EAAA,KAAAC,EAAA,GAAAC,CAAA,EAAAP,EAEA,OAAAI,IAAA,QAAAE,EACEE,EAAA,IACE,IAAC,CAAA,UAAAC,EACYR,EACT,2KACAE,IAAA,KAAA,oBAAA,GACsCA,IAAA,KAAA,qBAAA,EACC,EACzC,KAAAG,EACA,gBAAAJ,EACe,GAAAK,EACX,SAAAF,CAEH,CAAA,EAIPG,MAAAE,EAAAA,SAAA,CAAA,SAAAF,EAAA,IAEI,SAAC,CAAA,UAAAC,EACYR,EACT,wbACAG,IAAA,UAAA,iEAAA,GAGIA,IAAA,SAAA,6DAAA,GAGAD,IAAA,KAAA,+BAAA,GAC6CA,IAAA,KAAA,gCAAA,EACC,EACpD,SAAAD,EACA,GAAAK,EACI,SAAAF,CAEH,CAAA,CAAA,CAAA,CAIT,EAEAN,EAAA,aAAA,CAAsB,SAAA,GACV,QAAA,SAEZ"}